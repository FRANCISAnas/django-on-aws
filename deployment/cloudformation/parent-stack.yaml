AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  License: Apache-2.0
Description: Parent CloudFormation template to deploy a resilient, highly available web application to AWS

Parameters:
  ASGCPUTargetValue:
    Description: Average CPU Target for each instance (eg. 60%)
    Type: Number
    MinValue: 0
    MaxValue: 100
    Default: 0
  ASGDesiredCapacity:
    Description: Auto Scaling Group Desired Capacity
    Type: String
    Default: '2'
  CloudFrontExistingCertArn:
    Description: SSL Cert Arn stored in ACM with the same region CloudFront (us-east-1)
    Type: 'String'
    Default: 'arn:aws:acm:us-east-1:164045463835:certificate/26654aed-53fe-4033-9866-9b072ad88ed8'
  EC2LatestLinuxAmiId:
    Description: AWS managed SSM parameter to retrieve the latest Amazon Linux 2 AMI Id
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  EC2InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.micro]
    ConstraintDescription: Must be a valid EC2 instance type.
  EC2VolumeSize:
    Description: Volume size mounted to EC2
    Type: Number
    MinValue: 8
    MaxValue: 20
    Default: 8
  R53HostedZoneName:
    Description: The DNS name of an existing Amazon Route 53 hosted zone. For example, "mydomain.com" 
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    Type: String
    Default: 'bournique.fr'
    ConstraintDescription: Must be an existing DNS zone name.
  R53Subdomain:
    Description: The subdomain of the dns entry. For example, app -> app.mydomain.com.
    Type: String
    Default: 'app'
  SSMParamSlackWebhookUrl:
    NoEcho: 'true'
    Description: SSM Parameter Name for the Slack WebHook Url used for ASG/CodeDeploy notifications. Set empty string to disable.
    Type: AWS::SSM::Parameter::Value<String>
    Default: '/SLACK/INCOMING_WEBHOOK_URL'
  SSMParamNameRdsPostgresPassword:
    NoEcho: 'true'
    Description: SSM Parameter Name for the RDS password SecureString. Note it must be hardcoded in the DBInstance resource config.
    Type: String
    Default: '/RDS/POSTGRES_PASSWORD/SECURE'
  SubnetList:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Default: 'subnet-103a1a79,subnet-28219264'
  VpcId:
    Description: VpcId of the existing Virtual Private Cloud (VPC)
    Type: 'AWS::EC2::VPC::Id'
    Default: 'vpc-e82c7280'

Resources:
  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: network/template.yaml
      Parameters:
        ALBSubnetsString: !Join [',', !Ref SubnetList ]
        CloudFrontExistingCertArn: !Ref CloudFrontExistingCertArn
        OAIUserId: !GetAtt StorageStack.Outputs.OAIUserId
        R53HostedZoneName: !Ref R53HostedZoneName
        R53Subdomain: !Ref R53Subdomain
        S3BucketDomainNameLogging: !GetAtt StorageStack.Outputs.S3BucketDomainNameLogging
        S3BucketNameLogging: !GetAtt StorageStack.Outputs.S3BucketNameLogging
        S3StaticContentBucketDomainName: !GetAtt StorageStack.Outputs.S3BucketDomainNameWebappStaticFiles
        S3WebsiteBucketName: !GetAtt StorageStack.Outputs.S3BucketNameForFailoverWebsite
        VpcId: !Ref VpcId
  ComputeStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: compute/template.yaml
      Parameters:
        ASGCPUTargetValue: !Ref ASGCPUTargetValue
        ASGDesiredCapacity: !Ref ASGDesiredCapacity
        ASGSubnetsString: !Join [',', !Ref SubnetList ]
        EC2InstanceSecurityGroupId: !GetAtt NetworkStack.Outputs.EC2SecurityGroupId
        EC2InstanceType: !Ref EC2InstanceType
        EC2AmiId: !Ref EC2LatestLinuxAmiId
        EC2VolumeSize: !Ref EC2VolumeSize
        ElasticacheClusterRedisEndpointAddress: !GetAtt DatabaseStack.Outputs.RedisEndpoint
        RDSPostgresDBEndpointAddress: !GetAtt DatabaseStack.Outputs.PostgresEndpoint
        SSMParamNameRdsPostgresPassword: !Ref SSMParamNameRdsPostgresPassword
        S3BucketCodeDeployArtifactsArn: !GetAtt StorageStack.Outputs.S3BucketArnCodeDeployArtifacts
        S3BucketStaticFilesArn: !GetAtt StorageStack.Outputs.S3BucketArnWebappStaticFiles
        SNSTopicArn: !GetAtt ServerlessStack.Outputs.SNSTopicArn
        SQSQueueArn: !GetAtt ServerlessStack.Outputs.SQSQueueArn
        SQSQueueUrl: !GetAtt ServerlessStack.Outputs.SQSQueueUrl
        TargetGroupArn: !GetAtt NetworkStack.Outputs.TargetGroupArn
        TargetGroupName: !GetAtt NetworkStack.Outputs.TargetGroupName
  StorageStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: storage/template.yaml
      Parameters:
        R53HostedZoneName: !Ref R53HostedZoneName
        R53Subdomain: !Ref R53Subdomain
  ServerlessStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: serverless/template.yaml
      Parameters:
        SlackWebhookUrl: !Ref SSMParamSlackWebhookUrl
  DatabaseStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: database/template.yaml
      Parameters:
        AddRDSReadReplica: 'false'
        ElasticacheSecurityGroupId: !GetAtt NetworkStack.Outputs.ElastiCacheSecurityGroupId
        RDSSecurityGroupName: !GetAtt NetworkStack.Outputs.RDSSecurityGroupName
  DashboardStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: dashboard/template.yaml
      Parameters:
        ALBFullName: !GetAtt NetworkStack.Outputs.ALBFullName
        AutoScalingGroupName: !GetAtt ComputeStack.Outputs.AutoScalingGroupName
        CloudFrontDistributionId: !GetAtt NetworkStack.Outputs.CloudFrontDistributionId
        TargetGroupFullName: !GetAtt NetworkStack.Outputs.TargetGroupFullName
        WebsiteUrl: !Join ['', ['https://', !GetAtt NetworkStack.Outputs.Route53RecordSetDomainName]]

Outputs:
  DashboardUrl:
    Value: !Sub https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${DashboardStack.Outputs.DashboardName}
  CodeDeployApplicationName:
    Value: !GetAtt ComputeStack.Outputs.CodeDeployApplicationName
  CodeDeployDeploymentGroupName:
    Value: !GetAtt ComputeStack.Outputs.CodeDeployDeploymentGroupName
  CodeDeployS3BucketName:
    Value: !GetAtt StorageStack.Outputs.S3BucketNameCodeDeployArtifacts
  PostgresRdsEndpoint:
    Value: !GetAtt DatabaseStack.Outputs.PostgresEndpoint
  RedisElasticacheEndpoint:
    Value: !GetAtt DatabaseStack.Outputs.RedisEndpoint