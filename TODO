Manual steps prerequisite before launching cfn template:
- Route53 Hosted Zone
- Create free SSL certificate for ACM (3 months validity) https://itnext.io/using-letsencrypt-ssl-certificates-in-aws-certificate-manager-c2bc3c6ae10
- ACM with loaded SSL certificate, certificate must be both in eu-west-2 for ALB, and us-east-1 for CFN (2 different arns)
- SSM Paremeter to store CW Agent config file (JSON)
- Create RDS postgres with SSL
- SSM Parameters to store rds db connection details
- Create a slack incoming webhook for forward sns notifications to slack

AWS Deployment
- Configure CloudFormation network templates: custom VPC, public/private subnets, SGs,...
- Configure CloudFormation application templates: Elastic Beanstalk, ECS or ALB+ASG (spot fleet with 1 t2.micro?), API GTW, S3
- Define infra configurations (eg. schedule, failovers, etc.) and DR strategy

- Define S3 buckets: CI/CD artifacts, Django static files, Postgres dump, Logs, etc.

Application features
- Use SNS for email notifications on new posts
- Use CF/S3 for django static and media files 
- Worker tier: push data from django app to an SQS Queue with Lambda workers defined with AWS SAM
- Session data: Configure Django app to work with ElastiCache (unless use API Gateway in front of ELB?) or DynamoDB/Streams
- Configure django to use AWS Cognito for Users management and SSO

Cfn / app:
AutoScalingScheduledAction.yaml:
- simply Makefile functions/helpers, create separate Makefile.helpers?

- test postgres connection from parameter store variables
- define DR strategy
- create architecture diagram


- define codedeploy/cicd strategy to managed dev/prod pipelines
- review courses on ASG, ALB + all resources configurations, rename variables for consistency, simplify, add comments, descriptions, etc
(for SSM DB Password, must retrieved it dynamically within app with python sdk)
- use of nested stack and best practices: eg: split R53 / ALB / CF-S3 / NETWORK+SGs?
- when everything working, try with portfolio docker app



